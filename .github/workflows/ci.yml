name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:12.1
        env:
          POSTGRES_USER: clojars
          POSTGRES_PASSWORD: clojars
          POSTGRES_DB: clojars
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    env:
      DB_PORT: 5432
      CLOJARS_ENVIRONMENT: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Install Clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: latest
      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: clojars-${{ hashFiles('deps.edn') }}
          restore-keys: |
            clojars-
      
      - name: Start MinIO
        run: |
          docker run -d --name minio \
            -p 9000:9000 \
            -e MINIO_ROOT_USER=fake-access-key \
            -e MINIO_ROOT_PASSWORD=fake-secret-key \
            minio/minio:RELEASE.2023-04-20T17-56-55Z \
            server /data
      
      - name: Prepare dependencies
        run: make prep-deps
      
      - name: Download ElasticMQ
        run: curl -L https://s3-eu-west-1.amazonaws.com/softwaremill-public/elasticmq-server-1.6.12.jar -o elasticmq.jar
      
      - name: Start ElasticMQ
        run: java -Dconfig.file=dev-resources/elasticmq.conf -jar elasticmq.jar &
      
      - name: Wait for services
        run: |
          timeout 60 bash -c 'until nc -z localhost 5432; do sleep 1; done'
          timeout 60 bash -c 'until nc -z localhost 9000; do sleep 1; done'
          timeout 60 bash -c 'until nc -z localhost 9324; do sleep 1; done'
          echo "All services are ready"
      
      - name: Migrate database
        run: make migrate-db
      
      - name: Check dependabot
        run: make check-dependabot
      
      - name: Lint
        run: make lint
      
      - name: Run tests
        run: make test
      
      - name: Store test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/test-results
          if-no-files-found: ignore
